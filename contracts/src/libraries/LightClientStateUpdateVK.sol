// SPDX-License-Identifier: GPL-3.0-or-later
//
// Copyright (c) 2023 Espresso Systems (espressosys.com)
// This file is part of the Espresso Sequencer project.
//
// This program is free software: you can redistribute it and/or modify it under the terms of the
// GNU General Public License as published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
// even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
// You should have received a copy of the GNU General Public License along with this program. If
// not, see <https://www.gnu.org/licenses/>.

// NOTE: DO NOT MODIFY! GENERATED BY SCRIPT VIA `cargo run --bin gen-vk-contract --release`.
pragma solidity ^0.8.0;

import { IPlonkVerifier } from "../interfaces/IPlonkVerifier.sol";

/* solhint-disable no-inline-assembly */

library LightClientStateUpdateVK {
    function getVk() internal pure returns (IPlonkVerifier.VerifyingKey memory vk) {
        assembly {
            // domain size
            mstore(vk, 1048576)
            // num of public inputs
            mstore(add(vk, 0x20), 11)

            // sigma0
            mstore(
                mload(add(vk, 0x40)),
                17425521561317211150332406747083910778533028187068871110049757158598593416076
            )
            mstore(
                add(mload(add(vk, 0x40)), 0x20),
                4102954851617520144561260789230439331972649333479878813987242991488397154960
            )
            // sigma1
            mstore(
                mload(add(vk, 0x60)),
                1196221903700326256624205564743508182068743441476554464462201352563117972406
            )
            mstore(
                add(mload(add(vk, 0x60)), 0x20),
                3145421364735674033683818446404329167355192474243445954267703270211190628153
            )
            // sigma2
            mstore(
                mload(add(vk, 0x80)),
                11916586992501186063872468462679204480469859180687561296889307826633685645606
            )
            mstore(
                add(mload(add(vk, 0x80)), 0x20),
                14648443031351710109987589529264541399379424554019182560143471352713000256395
            )
            // sigma3
            mstore(
                mload(add(vk, 0xa0)),
                15214302562009752362723263951803262123875488277225789760423649278907975435909
            )
            mstore(
                add(mload(add(vk, 0xa0)), 0x20),
                14923342739468841552958235154563491959836915596191006877952825083918340525472
            )
            // sigma4
            mstore(
                mload(add(vk, 0xc0)),
                4843349310452537230570842675749672560574773384214850780853342887137492428195
            )
            mstore(
                add(mload(add(vk, 0xc0)), 0x20),
                5202767806966754384348781525447081969417765556202932669247869581722611363618
            )

            // q1
            mstore(
                mload(add(vk, 0xe0)),
                12466980253647197863523949882122657746001558430394371891778047008850329421115
            )
            mstore(
                add(mload(add(vk, 0xe0)), 0x20),
                361557274344703796527359967465158384549219123165960802605536906972142512006
            )
            // q2
            mstore(
                mload(add(vk, 0x100)),
                5931659549205234910810408580286745598885831969025569735948360065058978851763
            )
            mstore(
                add(mload(add(vk, 0x100)), 0x20),
                9496122563454086445600634192847376062545341568309830301357599600602894685214
            )
            // q3
            mstore(
                mload(add(vk, 0x120)),
                13416134883028471985650874820727392680938931672860015787204929883090660074155
            )
            mstore(
                add(mload(add(vk, 0x120)), 0x20),
                4536351019470275723378753116518283795536843949411441119908077930507936685175
            )
            // q4
            mstore(
                mload(add(vk, 0x140)),
                18543948145752508686613131095921285947697480580719415047340123972953593863125
            )
            mstore(
                add(mload(add(vk, 0x140)), 0x20),
                12692602670436285491044275748306931639042881008127374621216774308555595953062
            )

            // qM12
            mstore(
                mload(add(vk, 0x160)),
                106550073988543920586769649455077439246956595529883347818159899789765002229
            )
            mstore(
                add(mload(add(vk, 0x160)), 0x20),
                2715959482041502313111266343081155611167352660831984875711341237471290948875
            )
            // qM34
            mstore(
                mload(add(vk, 0x180)),
                10327472946492122366102057353474547438199377882786211527617242045618345684804
            )
            mstore(
                add(mload(add(vk, 0x180)), 0x20),
                250221952714311618167570683268039160934403486620453081324322880636020908259
            )

            // qO
            mstore(
                mload(add(vk, 0x1a0)),
                21404333575751727226773308025252944038845065232562928797508804563478912861952
            )
            mstore(
                add(mload(add(vk, 0x1a0)), 0x20),
                21666959861010532297933049706808674539056239964665650896779027292387438795344
            )
            // qC
            mstore(
                mload(add(vk, 0x1c0)),
                17476481469657731341505617829551702041018304706568399200670460539341986455449
            )
            mstore(
                add(mload(add(vk, 0x1c0)), 0x20),
                13442371743560265578060352708562539029987193963610502642810709467527712308420
            )
            // qH1
            mstore(
                mload(add(vk, 0x1e0)),
                271269703702509063405037213232753759099383403509159772522792961590812940692
            )
            mstore(
                add(mload(add(vk, 0x1e0)), 0x20),
                14278494566324766000172297208859996299916797915604484348044097507071812412232
            )
            // qH2
            mstore(
                mload(add(vk, 0x200)),
                184992713123027778841265929357623034441600642402295931904269663219005357570
            )
            mstore(
                add(mload(add(vk, 0x200)), 0x20),
                12764054383855857666063486226246678618318065931696439027096283631450610952515
            )
            // qH3
            mstore(
                mload(add(vk, 0x220)),
                10086692506048550183449376203492324195428353495407777096243340671389626162607
            )
            mstore(
                add(mload(add(vk, 0x220)), 0x20),
                10297394455299135280428731763757285478375255606485074244869710855303571705191
            )
            // qH4
            mstore(
                mload(add(vk, 0x240)),
                8727614809919057737663922812292350969787371462363384591395256378324689145475
            )
            mstore(
                add(mload(add(vk, 0x240)), 0x20),
                1308919828497170083713690383242056372987459220230569173422412710448350418663
            )
            // qEcc
            mstore(
                mload(add(vk, 0x260)),
                1629110141514917607190411179588253135595330890146733359426882364391829989433
            )
            mstore(
                add(mload(add(vk, 0x260)), 0x20),
                9802732174432577731680065691829634522386091545768624240289414976709128186979
            )
            // g2LSB
            mstore(
                add(vk, 0x280), 0xb0838893ec1f237e8b07323b0744599f4e97b598b3b589bcc2bc37b8d5c41801
            )
            // g2MSB
            mstore(
                add(vk, 0x2A0), 0xc18393c0fa30fe4e8b038e357ad851eae8de9107584effe7c7f1f651b2010e26
            )
        }
    }
}
