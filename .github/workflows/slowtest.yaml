name: Slow Test

on:
  push:
    branches:
      - main
      - release-*
    tags:
      # YYYYMMDD
      - "20[0-9][0-9][0-1][0-9][0-3][0-9]*"
  schedule:
    - cron: "0 0 * * 1"
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main')}}

# Build test binary with `testing` feature, which requires `hotshot_example` config
env:
  CARGO_TERM_COLOR: always
  RUST_LOG: info,libp2p=off,node=error

jobs:
  build-test-artifacts-postgres:
    name: Build test artifacts (postgres)
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - uses: rui314/setup-mold@v1

      - uses: actions/checkout@v4

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-provider: buildjet

      - name: Build and archive tests
        run: cargo nextest archive --locked --release --workspace --archive-file nextest-archive-postgres.tar.zst

      - name: Upload archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-archive-postgres
          path: nextest-archive-postgres.tar.zst

  build-test-artifacts-sqlite:
    name: Build test artifacts (sqlite)
    runs-on: buildjet-8vcpu-ubuntu-2204
    steps:
      - uses: rui314/setup-mold@v1

      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Enable Rust Caching
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true
          cache-provider: buildjet

      - name: Build and archive tests
        run: cargo nextest archive --locked --release --features "embedded-db testing" --workspace --archive-file nextest-archive-sqlite.tar.zst

      - name: Upload archive to workflow
        uses: actions/upload-artifact@v4
        with:
          name: nextest-archive-sqlite
          path: nextest-archive-sqlite.tar.zst

  slow-tests-sqlite:
    runs-on: ubuntu-latest
    needs: build-test-artifacts-sqlite
    steps:
      # These tests need the `anvil` binary provided by foundry
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - uses: taiki-e/install-action@nextest

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: nextest-archive-sqlite

      - name: Slow Test
        env:
          NEXTEST_PROFILE: slow
        run: |
          cargo nextest run --archive-file nextest-archive-sqlite.tar.zst  --verbose --no-fail-fast \
          --workspace-remap $PWD
        timeout-minutes: 40

  slow-tests-postgres:
    runs-on: ubuntu-latest
    needs: build-test-artifacts-postgres
    steps:
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - uses: actions/checkout@v4

      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Download archive
        uses: actions/download-artifact@v4
        with:
          name: nextest-archive-postgres

      - name: Slow Test
        env:
          NEXTEST_PROFILE: slow
        run: |
          cargo nextest run --archive-file nextest-archive-postgres.tar.zst --verbose --no-fail-fast \
          --workspace-remap $PWD
        timeout-minutes: 40

